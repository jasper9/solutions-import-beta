define(["underscore","backbone","util/appDirCommon"],function(_,Backbone,cu){var GitHubFile=Backbone.Model.extend({idAttribute:"path",defaults:{contentType:"application/xml",sha:undefined,path:undefined,theURL:undefined,rawData:undefined,inMemLinkHolder:undefined},get:function(attr){return _.isFunction(this[attr])?this[attr]():Backbone.Model.prototype.get.call(this,attr)},inMemLink:function(){if(this.has("inMemLinkHolder"))return this.get("inMemLinkHolder");var link=cu.getLinkForData(this.get("rawData"),this.get("contentType"));return cu.log("GitHubFile setting inMemLinkHolder: "+link),this.set("inMemLinkHolder",link),this.get("inMemLinkHolder")},initialize:function(arguments){Backbone.Model.prototype.initialize.apply(this,arguments);var error=this.validate(this.attributes);error&&this.trigger("error",this,error)},url:function(){return this.get("theURL")},validate:function(attrs){if(!_.isString(attrs.sha)||!_.isString(attrs.path)||!_.isString(attrs.theURL))return"Invalid attribute set."},save:function(){cu.log("GitHubFile: save called"),this.trigger("error",this,error)},destroy:function(){cu.log("GitHubFile: destroy called"),this.trigger("error",this,error)},sync:function(method,model,options){if(!_.isEqual("read",method)){cu.log("GitHubFile sync called with non-read method: "+method),this.trigger("error",this,error);return}if(!_.isUndefined(this.get("rawData"))&&!options.reset)return;var params=_.extend({type:"GET",timeout:3e4,processData:!0,url:this.url(),context:this,beforeSend:function(xhr){xhr.setRequestHeader("Accept","application/vnd.github.raw")},complete:function(data){},success:function(data){cu.log("success: "+data)},error:function(data){cu.log("error: "+data)},dataType:"html"},options);return $.ajax(params)},parse:function(response){this.set("rawData",response)}});return GitHubFile});